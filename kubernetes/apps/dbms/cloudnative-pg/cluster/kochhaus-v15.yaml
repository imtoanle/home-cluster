---
# yaml-language-server: $schema=https://kubernetes-schemas.haraldkoch.ca/postgresql.cnpg.io/cluster_v1.json
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: kochhaus-v15
  namespace: dbms
  annotations:
    kyverno.io/ignore: "true"
spec:

  description: Postgresql cluster for KochHaus

  imageName: ghcr.io/cloudnative-pg/postgresql:15.3

  instances: 3

  primaryUpdateStrategy: unsupervised

  storage:
    size: 10Gi
    storageClass: local-path

  superuserSecret:
    name: cloudnative-pg-secret

  affinity:
    nodeSelector:
      node.home.arpa/physical: "true"

  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 640Mi

  postgresql:
    parameters:
      max_connections: "100"
      shared_buffers: 128MB

  monitoring:
    enablePodMonitor: true

  backup:
    retentionPolicy: 30d
    barmanObjectStore:
      destinationPath: s3://cnpg/v15/v3
      endpointURL: http://${SECRET_BACKUP_SERVER}:9000
      wal:
        compression: bzip2
        maxParallel: 8
      s3Credentials:
        accessKeyId:
          name: cloudnative-pg-secret
          key: aws-access-key-id
        secretAccessKey:
          name: cloudnative-pg-secret
          key: aws-secret-access-key

  # the recovery source here is taken from the externalClusters section below.
  # bootstrap:
  #   # upgrade or recover from another running instance
  #   initdb:
  #     import:
  #       type: monolith
  #       databases:
  #         - "*"
  #       roles:
  #         - "*"
  #       source:
  #         externalCluster: kochhaus-pg14

  # normal restore from backup + WALs
  #   recovery:
  #     source: kochhaus-v15

  externalClusters: []
    # must be the name of the cluster instance that was backed up
    # - name: kochhaus-v15
    #   barmanObjectStore:
    #     destinationPath: s3://cnpg/v15/v2
    #     endpointURL: http://${SECRET_BACKUP_SERVER}:9000
    #     s3Credentials:
    #       accessKeyId:
    #         name: cloudnative-pg-secret
    #         key: aws-access-key-id
    #       secretAccessKey:
    #         name: cloudnative-pg-secret
    #         key: aws-secret-access-key
    #     wal:
    #       compression: bzip2
    #       maxParallel: 12
    # - name: kochhaus-pg14
    #   connectionParameters:
    #     host: kochhaus-ro.dbms
    #     user: postgres
    #     dbname: postgres
    #     sslmode: require
    #   password:
    #     name: cloudnative-pg-secret
    #     key: password
